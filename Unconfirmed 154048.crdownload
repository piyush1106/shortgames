import numpy as np
import random

# initialize the board
def create_board():
    return np.zeros((3, 3))

# check if a player has won
def check_win(board, player):
    # check rows, columns, and diagonals
    for i in range(3):
        if np.all(board[i, :] == player) or np.all(board[:, i] == player):
            return True
    if np.all(board.diagonal() == player) or np.all(np.fliplr(board).diagonal() == player):
        return True
    return False

# print the board
def print_board(board):
    for i in range(3):
        for j in range(3):
            print(board[i, j], end=' ')
            if j < 2:
                print('|', end=' ')
        print()
        if i < 2:
            print('-' * 9)

# human player makes a move
def human_move(board):
    print_board(board)
    print("Enter your move (row and column separated by a comma):")
    while True:
        try:
            move = input()
            row, col = map(int, move.split(','))
            if board[row, col] == 0:
                break
            print("Invalid move, try again:")
        except:
            print("Invalid input, try again:")
    board[row, col] = 1

# AI player makes a move
def ai_move(board):
    for i in range(3):
        for j in range(3):
            if board[i, j] == 0:
                board[i, j] = -1
                if check_win(board, -1):
                    board[i, j] = 1
                    return
                board[i, j] = 0
    # if AI cannot win, it tries to block the human player
    for i in range(3):
        for j in range(3):
            if board[i, j] == 0:
                board[i, j] = 1
                if check_win(board, 1):
                    board[i, j] = 1
                    return
                board[i, j] = 0
    # if none of the above work, the AI selects a random empty cell
    while True:
        i, j = random.randint(0, 2), random.randint(0, 2)
        if board[i, j] == 0:
            break
    board[i, j] = 1

# play the game
def play_game():
    board = create_board()
    while np.any(board == 0):
        if np.sum(board == 1) > np.sum(board == -1):
            human_move(board)
        else:
            ai_move(board)
        if check_win(board, 1):
            print_board(board)
            print("You win!")
            return
        elif check_win(board, -1):
            print_board(board)
            print("AI wins!")
            return
    print_board(board)
    print("It's a tie!")

play_game()